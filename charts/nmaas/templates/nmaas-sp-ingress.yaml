{{- if .Values.sp.enabled -}}
{{- if .Values.global.createIngressResources -}}
{{- $kubeVersion := .Capabilities.KubeVersion.GitVersion -}}
{{- if semverCompare ">=1.19-0" $kubeVersion -}}
apiVersion: networking.k8s.io/v1
{{- else -}}
apiVersion: networking.k8s.io/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ .Values.global.ingressName }}-sp
  annotations:
    {{- if not (semverCompare ">=1.19-0" $kubeVersion) }}
    kubernetes.io/ingress.class: {{ .Values.platform.properties.k8s.ingress.controller.ingressClass }}
    {{- end }}
    nginx.org/mergeable-ingress-type: minion
    {{- if and .Values.platform.tls .Values.global.acmeIssuer }}
    kubernetes.io/tls-acme: "true"
    certmanager.k8s.io/cluster-issuer: {{ .Values.global.issuerName }}
    {{- end }}
spec:
  {{- if $.Values.sp.tls }}
  tls:
  - hosts:
    - {{ .Values.sp.host | default .Values.global.nmaasDomain | quote }}
    {{- if .Values.global.acmeIssuer }}
    secretName: {{ .Values.sp.certName | default "nmaas-sp-tls" | quote }}
    {{- else }}
    secretName: {{ .Values.sp.certName | default .Values.global.wildcardCertificateName | quote }}
    {{- end }}
  {{- end }}
  {{- if semverCompare ">=1.19-0" $kubeVersion }}
  ingressClassName: {{ .Values.platform.properties.k8s.ingress.controller.ingressClass }}
  {{- end }}
  rules:
  - host: {{ .Values.sp.host | default .Values.global.nmaasDomain | quote }}
    http:
      paths:
      - path: /sso
        {{- if semverCompare ">=1.19-0" $kubeVersion }}
        pathType: Prefix
        backend:
          service:
            name: {{ .Values.sp.name }}
            port:
              number: {{ .Values.sp.targetPort }}
        {{- else }}      
        backend:
          serviceName: {{ .Values.sp.name }}
          servicePort: {{ .Values.sp.targetPort }}
        {{- end }}
      - path: /Shibboleth.sso
        {{- if semverCompare ">=1.19-0" $kubeVersion }}
        pathType: Prefix
        backend:
          service:
            name: {{ .Values.sp.name }}
            port:
              number: {{ .Values.sp.targetPort }}
        {{- else }}      
        backend:
          serviceName: {{ .Values.sp.name }}
          servicePort: {{ .Values.sp.targetPort }}
        {{- end }}
{{- end -}}
{{- end -}}
